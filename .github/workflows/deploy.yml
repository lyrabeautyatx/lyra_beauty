name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test --if-present
      
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOSTNAME: ${{ secrets.EC2_HOST }}
      run: |
        # Setup SSH
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        chmod 700 ~/.ssh
        
        # Configure SSH to skip host verification
        cat >> ~/.ssh/config << EOF
        Host *
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null
        EOF
        
        # Test SSH connection
        ssh -i ~/.ssh/id_rsa ec2-user@$HOSTNAME "echo 'SSH connection successful'"
        
        # Create deployment package
        echo "Creating deployment package..."
        mkdir deployment
        rsync -av \
          --exclude='node_modules' \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='*.pem' \
          --exclude='logs' \
          --exclude='backup-*.tar.gz' \
          ./ deployment/
        
        cd deployment
        tar -czf ../app.tar.gz .
        cd ..
        
        # Copy to server
        scp -i ~/.ssh/id_rsa app.tar.gz ec2-user@$HOSTNAME:/tmp/
        
        # Deploy on server
        ssh -i ~/.ssh/id_rsa ec2-user@$HOSTNAME << 'DEPLOY_SCRIPT'
          set -e
          
          # Navigate to application directory
          cd /opt/lyra-beauty
          
          # Backup current version if exists
          if [ -f package.json ]; then
            tar -czf "backup-$(date +%Y%m%d-%H%M%S).tar.gz" . \
              --exclude='backup-*.tar.gz' \
              --exclude='node_modules' \
              --exclude='logs' || true
          fi
          
          # Extract new version
          tar -xzf /tmp/app.tar.gz
          rm /tmp/app.tar.gz
          
          # Install dependencies
          npm install --production
          
          # Update environment file
          echo "NODE_ENV=production" > .env
          echo "PORT=3000" >> .env
          echo "SESSION_SECRET=lyra_beauty_$(date +%s)" >> .env
          
          # Create logs directory
          mkdir -p logs
          
          # Restart application with PM2
          pm2 stop lyra-beauty || echo "App not running"
          pm2 start ecosystem.config.js
          pm2 save
          
          echo "Deployment completed successfully!"
        DEPLOY_SCRIPT
        
    - name: Deployment Status
      run: |
        echo "🚀 Deployment completed!"
        echo "🌐 Application URL: http://${{ secrets.EC2_HOST }}"