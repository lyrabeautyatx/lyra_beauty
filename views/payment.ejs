<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Payment - Lyra Beauty</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/style.css">
</head>
<body class="gold-bg">
  <div class="container">
    <h2>Complete Your Payment</h2>
    
    <div class="booking-summary">
      <h3>Appointment Summary</h3>
      <p><strong>Service:</strong> <%= booking.serviceInfo.name %></p>
      <p><strong>Date:</strong> <%= moment(booking.date).format('MMMM Do, YYYY') %></p>
      <p><strong>Time:</strong> <%= booking.time %></p>
      
      <% if (booking.coupon) { %>
        <div class="pricing-breakdown">
          <p><strong>Original Price:</strong> $<%= (originalPrice / 100).toFixed(2) %></p>
          <p class="coupon-discount"><strong>Coupon Discount (<%= booking.coupon.code %>):</strong> -$<%= (discountAmount / 100).toFixed(2) %> (10% off)</p>
          <p class="final-price"><strong>Final Price:</strong> $<%= (finalPrice / 100).toFixed(2) %></p>
        </div>
      <% } else { %>
        <p><strong>Total Amount:</strong> $<%= (finalPrice / 100).toFixed(2) %></p>
      <% } %>
    </div>
    
    <div class="payment-options">
      <h3>Payment Options</h3>
      <div class="payment-choice">
        <label>
          <input type="radio" name="payment-type" value="down" checked>
          <strong>Down Payment (20%)</strong> - $<%= (downPaymentAmount / 100).toFixed(2) %>
          <small>Secure your appointment with a 20% down payment. Remaining balance of $<%= (remainingAmount / 100).toFixed(2) %> will be invoiced separately.</small>
        </label>
      </div>
      <div class="payment-choice">
        <label>
          <input type="radio" name="payment-type" value="full">
          <strong>Full Payment</strong> - $<%= (finalPrice / 100).toFixed(2) %>
          <small>Pay the full amount now to complete your booking.</small>
        </label>
      </div>
    </div>
    
    <div id="payment-form">
      <h3>Payment Information</h3>
      <p><em>This is a demo payment form. In production, this would integrate with Square's secure payment system.</em></p>
      
      <div class="form-group mb-3">
        <label>Card Details:</label>
        <div id="card-container"></div>
      </div>
      <button id="pay-button" type="button" class="btn btn-primary">
        <span id="pay-button-text">Pay $<%= (downPaymentAmount / 100).toFixed(2) %> (Down Payment)</span>
      </button>
    </div>
    
    <div id="payment-status"></div>
    
  <a href="/dashboard" class="btn btn-secondary">Back to Dashboard</a>
  </div>

  <!-- Square Web Payments SDK -->
  <script type="text/javascript" src="https://sandbox.web.squarecdn.com/v1/square.js"></script>
  <script>
    const applicationId = "<%= applicationId %>";
    const locationId = "<%= locationId %>";
    var finalPrice = Number('<%= finalPrice %>');
    var downPaymentAmount = Number('<%= downPaymentAmount %>');
    var remainingAmount = Number('<%= remainingAmount %>');

    // Update button text when payment type changes
    document.querySelectorAll('input[name="payment-type"]').forEach(radio => {
      radio.addEventListener('change', function() {
        const buttonText = document.getElementById('pay-button-text');
        if (this.value === 'down') {
          buttonText.textContent = `Pay $${(downPaymentAmount / 100).toFixed(2)} (Down Payment)`;
        } else {
          buttonText.textContent = `Pay $${(finalPrice / 100).toFixed(2)} (Full Payment)`;
        }
      });
    });

    async function initializeSquare() {
      if (!window.Square) {
        document.getElementById('payment-status').innerHTML = '<p class="error">Square SDK failed to load.</p>';
        return;
      }
      const payments = window.Square.payments(applicationId, locationId);
      const card = await payments.card();
      await card.attach('#card-container');

      document.getElementById('pay-button').addEventListener('click', async function() {
        const button = this;
        const statusDiv = document.getElementById('payment-status');
        button.disabled = true;
        statusDiv.innerHTML = '<p>Processing payment...</p>';

        // Get selected payment type
        const paymentType = document.querySelector('input[name="payment-type"]:checked').value;

        try {
          const result = await card.tokenize();
          if (result.status !== 'OK') {
            throw new Error(result.errors?.[0]?.message || 'Card tokenization failed');
          }
          const response = await fetch('/process-payment', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              sourceId: result.token,
              paymentType: paymentType
            })
          });
          const data = await response.json();
          if (data.success) {
            let successMessage = 'Payment successful!';
            if (paymentType === 'down') {
              successMessage += ` Down payment of $${(data.paidAmount / 100).toFixed(2)} processed.`;
              if (data.remainingAmount > 0) {
                successMessage += ` Remaining balance of $${(data.remainingAmount / 100).toFixed(2)} will be invoiced separately.`;
              }
              if (data.invoiceId) {
                successMessage += ` Invoice created: ${data.invoiceId}`;
              }
            } else {
              successMessage += ` Full payment of $${(data.paidAmount / 100).toFixed(2)} processed.`;
            }
            successMessage += ' Redirecting to your appointments...';
            statusDiv.innerHTML = `<p class="success">${successMessage}</p>`;
            setTimeout(() => {
              window.location.href = '/my-appointments';
            }, 3000);
          } else {
            throw new Error(data.error || 'Payment failed');
          }
        } catch (error) {
          button.disabled = false;
          statusDiv.innerHTML = `<p class="error">Payment failed: ${error.message}</p>`;
        }
      });
    }
    document.addEventListener('DOMContentLoaded', initializeSquare);
  </script>
</body>
</html>
